// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Controller can get user by their email 1`] = `
Object {
  "email": "validEmail@example.com",
  "password": "validPassword",
}
`;

exports[`Login Controller can return response correctly 1`] = `
Object {
  "body": Object {
    "data": Object {
      "attributes": Object {
        "accessToken": "Berear mockToken",
        "expireAt": "123456",
        "refreshToken": "mock-refreshToken",
      },
      "type": "tokens",
    },
  },
  "statusCode": 200,
}
`;

exports[`Login Controller can verify password if password is correct 1`] = `
Object {
  "body": Object {
    "data": Object {
      "attributes": Object {
        "email": "validEmail@example.com",
        "grantType": "password",
        "password": "temando@123",
      },
      "type": "tokens",
    },
  },
  "instrumentation": Object {
    "error": [MockFunction],
  },
  "user": Object {
    "email": "validEmail@example.com",
    "password": "$2b$10$lmtfpvxcPqC/tjJdqe7T6e3s.xWA2KxUQLZsA794xZTk.cJSQeIxi",
  },
}
`;

exports[`Login Controller throw 'BadRequestError'  in case that request does not matches with schema 1`] = `[BadRequestError: BadRequestError BadRequestError]`;

exports[`Login Controller throw 'BadRequestError' if provided refreshToken is invalid 1`] = `[BadRequestError: BadRequestError Refresh token is invalid.]`;

exports[`Login Controller throw 'NotFoundError' if user does not exist 1`] = `[NotFoundError: NotFoundError User with validEmail@example.com was not found]`;
